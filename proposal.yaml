openapi: 3.0.3

info:
  title: XTRM Payments API Proposals
  version: 0.0.1
  description: >
    The XTRM Payments API
  termsOfService: "https://www.xtrm.com/web/Participant/Profile/TermsPopup.aspx"
  contact:
    email: apisupport@xtrm.com
    name: XTRM API Help desk
  license:
    name: OFL

#########################
# RegEx to find descriptions on the same line
# and move them to a > format
#      // ^([\s]*)description:[\s]+([^\|^>].+)$
#      // \1description: > \n\1  \2
# note: will ALSO match description fields, as opposed to
#       OAS description parameters :-(
#########################

tags:
  # new tags

  - name: Proxy
    description: Calls dealing with proxy API functions

  # - name: Banks
  #  description: API calls dealing with bank connections and information

  # - name: Beneficiary Company
  #  description: API calls dealing with corporate beneficiaries

  # - name: Beneficiary User
  #  description: API calls dealing with personal beneficiaries

  # - name: OTP
  #  description: API calls to manage one time passwords

  # - name: Payment Methods
  #  description: API calls dealing with payment methods

  # - name: Programs
  #  description: API calls to manage remittance programs

  #- name: Transfer Funds
  # description: API calls dealing with moving funds

  #- name: Wallets
  #  description: API calls dealing with wallets

  #- name: Deprecated
  #  description: API calls that are specifically deprecated

  ######################## OLD TAGS ##########################
  #- name: AUTHORIZATION
  # description: Authorization token API
  #- name: XTRM AnySource
  #  description: API Operations for XTRM AnySource
  #- name: REMITTER API REFERENCE
  #  description: API Operations for XTRM Remitters
  #- name: BENEFICIARY API REFERENCE
  #  description: API Operations for XTRM Beneficiaries
  #- name: LINK BANK
  #  description: API Operations for connecting remitters and beneficiaries with banks
  #- name: COMPANY ADVANCED SERVICES
  #  description: Advanced API services

  #########################

  # security:
  #  - bearerAuth: [ ]

  # all requests require bearer-authorization
  #########################

servers:
  - url: "https://xapisandbox.xtrm.com/API/V4"
  #- url: '{protocol}://{environment}.xtrm.com/API/v4'
  #  variables:
  #    protocol:
  #      default: https
  #      enum:
  #        - https
  #      description: ''
  #    environment:
  #      default: xapisandbox
  #      enum:
  #        - xapisandbox
  #        - production
  #        - staging
  #        - devTrunk
  #        - devFork
  #      description: sandbox
  #  description: sandbox authorization server payment
  #########################

paths:

  /proxy/ApiProxy:
    post:
      operationId: ApiProxy
      summary: Make a proxied call to the XTRM API
      tags:
        - Proxy
      description: >
        Occasionally, a web client application or mobile
        application has a need to make an XTRM API directly.
        The most common reason is to keep highly sensitive
        information (such as bank account details) from
        touching a remote application server on their way
        to XTRM. The `ApiProxy` call allows a web client or
        mobile application to call the XTRM API directly
        without exposing XTRM API credentials.


        The first step is to create a
        `ProxyAuthorizationToken`. Unlike an API secret
        or token, this proxy token is far more limited.
        <ul>
        <li>The token expires in (at most) five (5) minutes</li>
        <li>The token can be used for (at most) five (5) API accesses
        (although another token may be generated)</li>
        <li>The token enables operations for only one beneficiary</li>
        <li>API calls using this token must come from a specific, pre-determined IP address (specified at token creation)</li>
        <li>The token enable only a few specific API calls (specified at token creation)</li>
        <li>Each token uses a unique and random endpoint (generated by XTRM at token creation)</li>
        <li>API calls that transfer money (funding wallets, sending money from wallet to wallet,
        or transferring money out of a wallet) may <b>not</b> be proxied.</li>
        </ul>


        To make a proxy API call, the application
        constructs the JSON request for the
        desired API call, and then calls `ApiProxy`.
        The token is placed in the request header
        (as a bearer token), the JSON request is
        placed into the `RequestPayload` field, and the
        specific API request is specified in the
        `ApiToProxy` field. The API call is processed,
        and the results from the API call are returned
        as a single JSON body in the `ResultPayload`
        field.


      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiProxyRequest"

      responses:
        default:
          description: >
            Error Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/xErrorDefault"
        "200":
          description: >
            Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiProxyResponse"

  /proxy/GetApiProxyToken:
    post:
      operationId: GetApiProxyToken
      summary: Get a proxy token for a remote app to access the XTRM API
      tags:
        - Proxy
      description: >
        Creates a use and time-limited token
        for a client web application or mobile application.
        The client application does not call the API directly.
        Instead, it makes a call to ApiProxy, at the specified
        endpoint. Please see the /proposal/ApiProxy for details.

        **This token cannot be used with any API call that
        transfers funds, including, but not limited to,
        `TransferFunds`.**

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetApiProxyTokenRequest"

      responses:
        default:
          description: >
            Error Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/xErrorDefault"
        "200":
          description: >
            Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApiProxyTokenResponse"


components:

  schemas:

    GetApiProxyTokenRequest:
      type: object
      required:
        - GetApiProxyToken
      properties:
        GetApiProxyToken:
          type: object
          required:
            - Request
          properties:
            Request:
              type: object
              required:
                - IssuerAccountNumber
                - BeneficiaryID
                - ApiCallToProxy
                - ExternalClientIPAddress
                - AllowedApiCalls
                - ProxyUsageCount
                - SecondsToLive
              properties:
                IssuerAccountNumber:
                  $ref: "#/components/schemas/xIAN"
                BeneficiaryID:
                  $ref: "#/components/schemas/xIAN"
                ExternalClientIPAddress:
                  $ref: "#/components/schemas/xUniversalIPAddress"
                AllowedApiCalls:
                  type: array
                  items:
                    $ref: "#/components/schemas/xApiEndpoint"
                ProxyUsageCount:
                  $ref: "#/components/schemas/xUsageCount"
                SecondsToLive:
                  description: >
                    Time, in seconds, the authorization token will be valid.
                    The maximum time is 10 minutes (600 seconds).
                  type: string
                  minLength: 1
                  maxLength: 3
                  pattern: ([1-5]?\d?\d|600)
                  example: "600"


    GetApiProxyTokenResponse:
      type: object
      properties:
        GetApiProxyTokenResponse:
          type: object
          properties:
            GetApiProxyTokenResult:
              type: object
              properties:
                ProxyAuthorizationToken:
                  $ref: "#/components/schemas/xProxyAuthorizationToken"
                SubmissionEndpoint:
                  description: >
                    Endpoint for the proxy submission call for this specific authorization token
                  type: string
                  minLength: 6
                  maxLength: 60
                  example: "https://xapi.xtrm.com/v4/apiproxy/tbBPt0HSgd"
                UsageCount:
                  $ref: "#/components/schemas/xUsageCount"
                expires_in:
                  type: integer
                  description: >
                    Expiry time in seconds as string
                  example: 600
                .issued:
                  type: string
                  description: >
                    timestamp of token creation
                  example: "Mon, 19 Apr 2021 17:20:45 GMT"
                .expires:
                  type: string
                  description: >
                    time of token expiration
                  example: "Mon, 19 Apr 2021 17:26:45 GMT"
                OperationStatus:
                  $ref: "#/components/schemas/xOpStatus"

    ApiProxyRequest:
      type: object
      required:
        - ApiProxyRequest
      properties:
        ApiProxyRequest:
          type: object
          required:
            - ApiToProxy
            - RequestPayload
          properties:
            # ProxyAuthorizationToken:
            # ref: "#/components/schemas/xProxyAuthorizationToken"
            ApiToProxy:
              $ref: "#/components/schemas/xApiEndpoint"
            RequestPayload:
              $ref: "#/components/schemas/xJsonBody"

    ApiProxyResponse:
      type: object
      properties:
        ApiProxyResult:
          type: object
          properties:
            OperationStatus:
              $ref: "#/components/schemas/xOpStatus"
            ResultPayload:
              $ref: "#/components/schemas/xJsonBody"

    # /**********************************/
    # These are pre-existing definitions from the primary YAML file

    xErrorDefault:
      type: object
      properties:
        Error:
          description: >
            The nature, type, and sort of error
          type: object
      example:
        Error:
          Error: "Error Message"
          Error_Description: "Error Description"

    xOpStatus:
      description: >
        Errors are returned variously by different calls.
        Possibilities include a string, an array of string
        tuples, or the null value.
      type: object
      properties:
        Success:
          description: >
            Success or failure of operation (true / false)
          type: boolean
          example: true
        Errors:
          nullable: true
          type: object
          example: null

    xIAN:
      description: >
        the `AccountID`, `IssuerAccountNumber`, `UserID`
        (and possibly some others) is a unique XTRM
        account identifier, starting with `SPN` for
        companies (usually remitters), or `PAT`
        for individual beneficiaries.
      type: string
      minLength: 01
      maxLength: 20
      pattern: (SPN[1-9][0-9]*|PAT[1-9][0-9]*)
      example: SPN1234567

    # /******************************************/
    # New components for the Proxy calls.

    xProxyAuthorizationToken:
      description: >
        A token authorizing usage of the XTRM proxy mechanism
      type: string
      minLength: 128
      maxLength: 4096
      example: "rlpRJOTSQxQt1QKs+VUKXKwYAdjuZXHk++P8fk+y/bYVeG77Xanucg8IhiXH2m6kF95YMN4fGfTNGIdp6201hIqOUKSCTsSGxgjtcrqkPchZ07wn20xt+55k6tWKeysdZdlulE9alPZWefSaBig+ekSITRO8cmndIRbRJBDIkF0C/fLFeGkMqNsVIcUU="

    xIPV4:
      description: >
        A string representing an Internet
        Protocol (IP) Version 4 address
      type: string
      pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      minLength: 7
      maxLength: 15
      example: "25.125.8.33"

    xIPV6:
      description: >
        A string representing an Internet
        Protocol (IP) Version 6 address
      type: string
      pattern: (([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))
      minLength: 7
      maxLength: 200
      example: "FE80:0000:0000:0000:0202:B3FF:FE1E:8329"

    xUniversalIPAddress:
      type: object
      required:
        - IPV4
        - IPV6
      properties:
        IPV4:
          $ref: "#/components/schemas/xIPV4"
        IPV6:
          $ref: "#/components/schemas/xIPV6"

    xApiEndpoint:
      description: >
        An XTRM Payments API endpoint
      type: string
      minLength: 1
      maxLength: 100
      example: "Register/CreateUser"

    xJsonBody:
      description: >
        An arbitrary JSON object of 16K (65536) characters or less
      type: string
      minLength: 0
      maxLength: 65536

    xUsageCount:
      description: >
        Number of times a ProxyAuthorizationToken is valid, maximum 5
      type: string
      minLength: 1
      maxLength: 1
      example: "3"
      pattern: ([12345])